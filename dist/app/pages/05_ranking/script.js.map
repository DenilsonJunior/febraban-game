{"version":3,"sources":["script.js"],"names":["$","document","ready","setTimeout","bridge","listRankingDB","results","console","log","controlRanking","addClass","inserirNome","text","blink","textAnima","let","index","intervaloRef","current","blinkIntervalRef","$spanText","setInterval","clearInterval","displayedText","slice","currentUser","getObjectFromLocalStorage","it","id","email","currentPointMax","ellipsis","lines","filter","data","desativo","map","item","indice","append","maior","nome","name","on","this","css","game1","game2","game3"],"mappings":"AAAAA,EAAEC,QAAQ,EAAEC,MAAM,WAChBC,WAAW,KACTC,OAAOC,cAAeC,IACpBC,QAAQC,IAAIF,CAAO,EACnBG,eAAeH,CAAO,EACtBN,EAAE,YAAY,EAAEU,SAAS,MAAM,CACjC,CAAC,CACH,EAAG,GAAQ,EAyCXC,CArCE,MAAMC,EAASZ,EAAA,UAAYY,EAIvBC,EAFEC,EAAS,UAAS,EAAAF,KAAA,EAGxBG,IAAAC,EAAMC,EAAiBC,EAAS,CAAA,EAAK,MAACD,EAAA,CAAAC,QAAA,IAAA,EAChCC,EAAmB,CAAAD,QAAA,IAAA,EAGzBE,EAAUR,KAAK,EAAE,EAcjBK,EAAaC,QAAUG,YAAY,WADnCL,EAAAA,EACaE,EAAUG,SACdC,cAAEL,EAAAC,OAAA,EACHF,cAAQF,EAAkBI,OAAA,EAC1BI,EAAcL,KAAAA,CAAaC,EAInC,EAAG,GAFKE,EAKRD,EAAiBD,QAAUG,YArB3B,WADAN,IAAAQ,EAAAT,EAAAU,MAAA,EAAAR,CAAA,EACAH,EACQU,EAAAA,KAAgBT,EAAiB,GAAEE,EAEnCI,EAAcR,KAACW,EAAoB,GAAA,EAEnCH,EAAAA,CAASP,CAGjB,EAa6D,GAAG,CAItD,CACd,CAAC,EAAD,MAAEJ,eAAAH,IAEF,MAAMG,EAAAA,0BAA8B,MAAA,EAAA,MAClC,IACMgB,EADQC,EAAAA,OAAAA,GAA0BC,EAAMC,KAAEC,CAAU,EAAA,GACtBF,KAAOA,MAG3C3B,EAAE,eAAe,EAAEY,KAAKkB,CAAe,EACvC9B,EAAE,OAAO,EAAE+B,SAAS,CAAAC,MAAA,CAAA,CAAA,EAAW1B,EAE/BA,OACG2B,GAAU,CAAAN,EAAMA,KAAGO,QAAKC,EAEtBC,IAAC,CAAAC,EAAAC,KAERtC,EAAA,sBAAA,EACAuC,6CAAAD;;;gCAGgCD,EAAS,EAACG,GAAM,IACnCN,KAAKM,EAAS;+BAE3BH,EAAAH,KAAAO,MAAAJ,EAAAH,KAAAQ;gCACAL,EAAAH,KAAAM,SACmB,GAAnBH,EAAAH,KAAkBM,MAAC,QAAA;;;kBAMD,EAGLH,EACR,EALHrC,EASEA,eAAE,EAAe2C,GAAC/B,QAAKN,WACvBN,IAAEsC,EAAAtC,EAAA4C,IAAgBhC,EAAAA,KAAKN,MAAQgC,EAC/B/B,QAAAC,IAAAF,EAAAgC,EAAA,EAPAtC,EAAE,OAAO,EAAE6C,IAAI,UAAW,MAAM,EAChC7C,EAAE,aAAa,EAAEY,KACfN,EAAQgC,GAAQJ,KAAKO,MAAQnC,EAAQgC,GAAQJ,KAAKQ,IACpD,EACA1C,EAAE,cAAc,EAAEY,KAAKN,EAAQgC,GAAQJ,KAAKY,OAAS,GAAG,EACxD9C,EAAE,cAAc,EAAEY,KAAKN,EAAQgC,GAAQJ,KAAKa,OAAS,GAAG,EACxD/C,EAAE,cAAc,EAAEY,KAAKN,EAAQgC,GAAQJ,KAAKc,OAAS,GAAG,CAC1D,CAAC,CACH","file":"script.js","sourcesContent":["$(document).ready(function () {\r\n  setTimeout(() => {\r\n    bridge.listRankingDB((results) => {\r\n      console.log(results);\r\n      controlRanking(results);\r\n      $(\".preloader\").addClass(\"hide\");\r\n    });\r\n  }, 1000 * 3);\r\n\r\n  function inserirNome() {\r\n    const $spanText = $('.textDig');\r\n    const text = $('.textDig').text();\r\n    \r\n    const textAnima = text; // Defina a variável textAnima com o nome desejado\r\n    let index = 0;\r\n    let blink = true;\r\n    const intervaloRef = { current: null };\r\n    const blinkIntervalRef = { current: null };\r\n\r\n    // Limpa o conteúdo existente e prepara a animação\r\n    $spanText.text(\"\");\r\n\r\n    // Função para atualizar o texto com o efeito de cursor piscando\r\n    function updateTextWithCursor() {\r\n        let displayedText = textAnima.slice(0, index);\r\n        if (blink) {\r\n            $spanText.text(displayedText + '|');\r\n        } else {\r\n            $spanText.text(displayedText + ' ');\r\n        }\r\n        blink = !blink;\r\n    }\r\n\r\n    // Inicia o intervalo para animar a inserção das letras\r\n    intervaloRef.current = setInterval(function() {\r\n        index++;\r\n        if (index > textAnima.length) {\r\n            clearInterval(intervaloRef.current);\r\n            clearInterval(blinkIntervalRef.current);\r\n            $spanText.text(textAnima); // Remove o cursor final\r\n        }\r\n    }, 180); // Ajuste o tempo para digitação\r\n\r\n    // Inicia o intervalo para o cursor piscando\r\n    blinkIntervalRef.current = setInterval(updateTextWithCursor, 150); // Ajuste o tempo para piscar\r\n  }\r\n\r\n  // Chama a função para inserir o nome com a animação\r\n  inserirNome();\r\n});\r\n\r\nconst controlRanking = (results) => {\r\n  const email = getObjectFromLocalStorage(\"user\")[\"email\"]; ///controlgame\r\n  const currentUser = results.filter((it) => it.id === email)[0];\r\n  const currentPointMax = currentUser.data.maior;\r\n\r\n  $(\".currentScore\").text(currentPointMax);\r\n  $(\".nome\").ellipsis({ lines: 1 });\r\n\r\n  results\r\n    .filter((it) => !it.data.desativo)\r\n    .map((item, indice) => {\r\n      $(\".ranking .boxRanking\")\r\n        .append(`<button class=\"rankingScore\" item=\"${indice}\" data-modal=\"#pop1\">\r\n        \r\n        <div class=\"datBase\">\r\n            <p class=\"number\">${indice + 1 < 10 ? \"0\" : \"\"}${indice + 1}</p>\r\n            <p class=\"nome\" >${item.data.nome || item.data.name}</p>\r\n            <p class=\"point\" >${item.data.maior} ${\r\n        item.data.maior == 1 ? \"ponto\" : \"pontos\"\r\n      }</p>\r\n        </div>\r\n        <div class=\"ico\"></div>\r\n        </button>`);\r\n\r\n      return item;\r\n    });\r\n\r\n  $(\".rankingScore\").on(\"click\", function () {\r\n    var indice = $(this).attr(\"item\");\r\n    console.log(results[indice]);\r\n\r\n    $(\"#pop1\").css(\"display\", \"flex\");\r\n    $(\"#pop1 .nome\").text(\r\n      results[indice].data.nome || results[indice].data.name\r\n    );\r\n    $(\"#pop1 .game1\").text(results[indice].data.game1 || \"-\");\r\n    $(\"#pop1 .game2\").text(results[indice].data.game2 || \"-\");\r\n    $(\"#pop1 .game3\").text(results[indice].data.game3 || \"-\");\r\n  });\r\n};\r\n"]}