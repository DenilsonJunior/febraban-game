{"version":3,"sources":["script.js"],"names":["$","document","ready","setTimeout","bridge","listRankingDB","results","console","log","controlRanking","addClass","inserirNome","text","blink","textAnima","let","index","intervaloRef","current","blinkIntervalRef","$spanText","setInterval","clearInterval","displayedText","slice","email","getObjectFromLocalStorage","currentPointMax","currentUser","find","it","id","data","maior","ellipsis","lines","filter","desativo","forEach","item","indice","buttonHTML","nome","name","game1","game2","game3","append","on","this","pontos","css","error"],"mappings":"AAAAA,EAAEC,QAAQ,EAAEC,MAAM,WAChBC,WAAW,KACTC,OAAOC,cAAeC,IACpBC,QAAQC,IAAIF,CAAO,EACnBG,eAAeH,CAAO,EACtBN,EAAE,YAAY,EAAEU,SAAS,MAAM,CACjC,CAAC,CACH,EAAG,GAAQ,EAyCXC,CArCE,MAAMC,EAASZ,EAAA,UAAYY,EAIvBC,EAFEC,EAAS,UAAS,EAAAF,KAAA,EAGxBG,IAAAC,EAAMC,EAAiBC,EAAS,CAAA,EAAK,MAACD,EAAA,CAAAC,QAAA,IAAA,EAChCC,EAAmB,CAAAD,QAAA,IAAA,EAGzBE,EAAUR,KAAK,EAAE,EAcjBK,EAAaC,QAAUG,YAAY,WADnCL,EAAAA,EACaE,EAAUG,SACdC,cAAEL,EAAAC,OAAA,EACHF,cAAQF,EAAkBI,OAAA,EAC1BI,EAAcL,KAAAA,CAAaC,EAInC,EAAG,GAFKE,EAKRD,EAAiBD,QAAUG,YArB3B,WADAN,IAAAQ,EAAAT,EAAAU,MAAA,EAAAR,CAAA,EACAH,EACQU,EAAAA,KAAgBT,EAAiB,GAAEE,EAEnCI,EAAcR,KAACW,EAAoB,GAAA,EAEnCH,EAAAA,CAASP,CAGjB,EAa6D,GAAG,CAItD,CACd,CAAC,EAAD,MAAEJ,eAAAH,IAGA,MAAAmB,EAAAC,0BAAA,MAAA,EAAA,MACA,IAaAC,EAbAF,GAMAG,EAAAtB,EAAAuB,KAAAC,GAAAA,EAAAC,KAAAN,CAAA,IAOAE,EAAAC,EAAAI,KAAAC,MAGAjC,EAAA,eAAA,EAAAY,KAAAe,CAAA,EAGA3B,EAAA,OAAA,EAAAkC,SAAA,CAAAC,MAAA,CAAA,CAAA,EAC+B7B,EAI5B8B,OAAQN,GAAO,CAACA,EAAGE,KAAKK,QAAQ,EAFnCC,QAAA,CAAAC,EAAAC,KAIIC;mDACmBD,iBAAAD,EAAAP,KAAAU,MAAAH,EAAAP,KAAAW,sBAAAJ,EAAAP,KAAAC,sBAAAM,EAAAP,KAAAY,OAAA,oBAAAL,EAAAP,KAAAa,OAAA,oBAAAN,EAAAP,KAAAc,OAAA;;gCAEzBN,EAAA,EAAA,GAAA,IAAA,KAAAA,EAAA;8BACAD,EAAgCC,KAAME,MAASH,EAAMP,KAAKW;+BAC5BJ,EAAKP,KAAKU,SAAsB,GAAdH,EAAKP,KAAKW,MAAI,QAAA;;;mBAMxD3C,EAAA,sBAAA,EAAA+C,OAAAN,CAAA,CACAzC,CAAC,EAGLA,EAAA,eAAA,EAAAgD,GAAA,QAAA,WAEE,IAAAN,EAAA1C,EAAAiD,IAAA,EAAAjB,KAAA,MAAA,EAEMkB,GADSlD,EAAAiD,IAAMjB,EAAAA,KAAK,QAAO,EACrBhC,EAAIiD,IAAC,EAAKjB,KAAK,OAAC,GACtBY,EAAQ5C,EAAEiD,IAAI,EAAEjB,KAAK,OAAO,EAC5Ba,EAAQ7C,EAAEiD,IAAI,EAAEjB,KAAK,OAAO,EAGlChC,EAAA,OAAA,EAAAmD,IAAA,UAAA,MAAA,EACAnD,EAAE,aAAa,EAAAY,KAAA8B,CAAW,EAC1B1C,EAAE,cAAc,EAACY,KAAK8B,CAAK,EAC3B1C,EAAE,cAAc,EAAEY,KAAKgC,CAAK,EAC5B5C,EAAE,cAAc,EAAEY,KAAKiC,CAAK,CAE9B,CAAC,GAhDDtC,QAAKqB,MAAW,8CAAE,EAPlBrB,QAAU6C,MAAE,uCAAA,CAwDd","file":"script.js","sourcesContent":["$(document).ready(function () {\n  setTimeout(() => {\n    bridge.listRankingDB((results) => {\n      console.log(results);\n      controlRanking(results);\n      $(\".preloader\").addClass(\"hide\");\n    });\n  }, 1000 * 3);\n\n  function inserirNome() {\n    const $spanText = $('.textDig');\n    const text = $('.textDig').text();\n    \n    const textAnima = text; // Defina a variável textAnima com o nome desejado\n    let index = 0;\n    let blink = true;\n    const intervaloRef = { current: null };\n    const blinkIntervalRef = { current: null };\n\n    // Limpa o conteúdo existente e prepara a animação\n    $spanText.text(\"\");\n\n    // Função para atualizar o texto com o efeito de cursor piscando\n    function updateTextWithCursor() {\n        let displayedText = textAnima.slice(0, index);\n        if (blink) {\n            $spanText.text(displayedText + '|');\n        } else {\n            $spanText.text(displayedText + ' ');\n        }\n        blink = !blink;\n    }\n\n    // Inicia o intervalo para animar a inserção das letras\n    intervaloRef.current = setInterval(function() {\n        index++;\n        if (index > textAnima.length) {\n            clearInterval(intervaloRef.current);\n            clearInterval(blinkIntervalRef.current);\n            $spanText.text(textAnima); // Remove o cursor final\n        }\n    }, 180); // Ajuste o tempo para digitação\n\n    // Inicia o intervalo para o cursor piscando\n    blinkIntervalRef.current = setInterval(updateTextWithCursor, 150); // Ajuste o tempo para piscar\n  }\n\n  // Chama a função para inserir o nome com a animação\n  inserirNome();\n});\n\nconst controlRanking = (results) => {\n  // Obtém o email do usuário a partir do localStorage\n  const email = getObjectFromLocalStorage(\"user\")[\"email\"];\n  if (!email) {\n    console.error(\"Email não encontrado no localStorage.\");\n    return;\n  }\n\n  // Encontra o usuário atual nos resultados com base no email\n  const currentUser = results.find((it) => it.id === email);\n  if (!currentUser) {\n    console.error(\"Usuário atual não encontrado nos resultados.\");\n    return;\n  }\n\n  // Obtém a maior pontuação do usuário atual\n  const currentPointMax = currentUser.data.maior;\n\n  // Atualiza o texto da pontuação atual no elemento com a classe 'currentScore'\n  $(\".currentScore\").text(currentPointMax);\n\n  // Aplica a função ellipsis nos elementos com a classe 'nome'\n  $(\".nome\").ellipsis({ lines: 1 });\n\n  // Filtra os resultados para excluir os desativados e adiciona os botões de ranking\n  results\n    .filter((it) => !it.data.desativo)\n    .forEach((item, indice) => {\n      // Cria o HTML do botão de ranking\n      const buttonHTML = `\n        <button class=\"rankingScore\" data-index=\"${indice}\" data-nome=\"${item.data.nome || item.data.name}\" data-pontos=\"${item.data.maior}\" data-game1=\"${item.data.game1 || '-'}\" data-game2=\"${item.data.game2 || '-'}\" data-game3=\"${item.data.game3 || '-'}\">\n          <div class=\"datBase\">\n            <p class=\"number\">${indice + 1 < 10 ? \"0\" : \"\"}${indice + 1}</p>\n            <p class=\"nome\">${item.data.nome || item.data.name}</p>\n            <p class=\"point\">${item.data.maior} ${item.data.maior == 1 ? \"ponto\" : \"pontos\"}</p>\n          </div>\n          <div class=\"ico\"></div>\n        </button>`;\n      \n      // Adiciona o botão de ranking ao DOM\n      $(\".ranking .boxRanking\").append(buttonHTML);\n    });\n\n  // Adiciona um evento de clique a cada botão de ranking\n  $(\".rankingScore\").on(\"click\", function () {\n    // Obtém os dados do item clicado a partir dos atributos data do botão\n    const nome = $(this).data(\"nome\");\n    const pontos = $(this).data(\"pontos\");\n    const game1 = $(this).data(\"game1\");\n    const game2 = $(this).data(\"game2\");\n    const game3 = $(this).data(\"game3\");\n\n    // Exibe o modal e atualiza as informações do jogador no modal\n    $(\"#pop1\").css(\"display\", \"flex\");\n    $(\"#pop1 .nome\").text(nome);\n    $(\"#pop1 .game1\").text(game1);\n    $(\"#pop1 .game2\").text(game2);\n    $(\"#pop1 .game3\").text(game3);\n  });\n};\n"]}