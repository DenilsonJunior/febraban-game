{"version":3,"sources":["script.js"],"names":["$","document","ready","setTimeout","bridge","listRankingDB","results","console","log","controlRanking","addClass","inserirNome","text","blink","textAnima","let","index","intervaloRef","current","blinkIntervalRef","$spanText","setInterval","clearInterval","displayedText","slice","email","getObjectFromLocalStorage","currentPointMax","currentUser","find","it","id","data","maior","ellipsis","lines","filter","desativo","forEach","item","indice","buttonHTML","nome","name","game1","game2","game3","append","on","this","pontos","css","error"],"mappings":"AAAAA,EAAEC,QAAQ,EAAEC,MAAM,WAChBC,WAAW,KACTC,OAAOC,cAAeC,IACpBC,QAAQC,IAAIF,CAAO,EACnBG,eAAeH,CAAO,EACtBN,EAAE,YAAY,EAAEU,SAAS,MAAM,CACjC,CAAC,CACH,EAAG,GAAQ,EAyCXC,CArCE,MAAMC,EAASZ,EAAA,UAAYY,EAIvBC,EAFEC,EAAS,UAAS,EAAAF,KAAA,EAGxBG,IAAAC,EAAMC,EAAiBC,EAAS,CAAA,EAAK,MAACD,EAAA,CAAAC,QAAA,IAAA,EAChCC,EAAmB,CAAAD,QAAA,IAAA,EAGzBE,EAAUR,KAAK,EAAE,EAcjBK,EAAaC,QAAUG,YAAY,WADnCL,EAAAA,EACaE,EAAUG,SACdC,cAAEL,EAAAC,OAAA,EACHF,cAAQF,EAAkBI,OAAA,EAC1BI,EAAcL,KAAAA,CAAaC,EAInC,EAAG,GAFKE,EAKRD,EAAiBD,QAAUG,YArB3B,WADAN,IAAAQ,EAAAT,EAAAU,MAAA,EAAAR,CAAA,EACAH,EACQU,EAAAA,KAAgBT,EAAiB,GAAEE,EAEnCI,EAAcR,KAACW,EAAoB,GAAA,EAEnCH,EAAAA,CAASP,CAGjB,EAa6D,GAAG,CAItD,CACd,CAAC,EAAD,MAAEJ,eAAAH,IAGA,MAAAmB,EAAAC,0BAAA,MAAA,EAAA,MACA,IAaAC,EAbAF,GAMAG,EAAAtB,EAAAuB,KAAAC,GAAAA,EAAAC,KAAAN,CAAA,IAOAE,EAAAC,EAAAI,KAAAC,MAGAjC,EAAA,eAAA,EAAAY,KAAAe,CAAA,EAGA3B,EAAA,OAAA,EAAAkC,SAAA,CAAAC,MAAA,CAAA,CAAA,EAC+B7B,EAI5B8B,OAAQN,GAAO,CAACA,EAAGE,KAAKK,QAAQ,EAFnCC,QAAA,CAAAC,EAAAC,KAIIC;mDACoBD,iBAAAD,EAAAP,KAAAU,MAAAH,EAAAP,KAAAW,sBAAAJ,EAAAP,KAAAC,sBAAAM,EAAAP,KAAAY,OAAA,oBAAAL,EAAAP,KAAAa,OAAA,oBAAAN,EAAAP,KAAAc,OAAA;;gCAE1BN,EAAA,EAAA,GAAA,IAAA,KAAAA,EAAA;8BACAD,EAAgCC,KAAME,MAASH,EAAMP,KAAMW;+BAC7BJ,EAAKP,KAAKU,SAAuB,GAAfH,EAAKP,KAAKW,MAAK,QAAA;;;mBAMzD3C,EAAA,sBAAA,EAAA+C,OAAAN,CAAA,CACAzC,CAAC,EAGLA,EAAA,eAAA,EAAAgD,GAAA,QAAA,WAEE,IAAAN,EAAA1C,EAAAiD,IAAA,EAAAjB,KAAA,MAAA,EAEMkB,GADSlD,EAAAiD,IAAMjB,EAAAA,KAAK,QAAO,EACrBhC,EAAIiD,IAAC,EAAKjB,KAAK,OAAC,GACtBY,EAAQ5C,EAAEiD,IAAI,EAAEjB,KAAK,OAAO,EAC5Ba,EAAQ7C,EAAEiD,IAAI,EAAEjB,KAAK,OAAO,EAGlChC,EAAA,OAAA,EAAAmD,IAAA,UAAA,MAAA,EACAnD,EAAE,aAAa,EAAAY,KAAA8B,CAAW,EAC1B1C,EAAE,cAAc,EAACY,KAAK8B,CAAK,EAC3B1C,EAAE,cAAc,EAAEY,KAAKgC,CAAK,EAC5B5C,EAAE,cAAc,EAAEY,KAAKiC,CAAK,CAE9B,CAAC,GAhDDtC,QAAKqB,MAAW,8CAAE,EAPlBrB,QAAU6C,MAAE,uCAAA,CAwDd","file":"script.js","sourcesContent":["$(document).ready(function () {\r\n  setTimeout(() => {\r\n    bridge.listRankingDB((results) => {\r\n      console.log(results);\r\n      controlRanking(results);\r\n      $(\".preloader\").addClass(\"hide\");\r\n    });\r\n  }, 1000 * 3);\r\n\r\n  function inserirNome() {\r\n    const $spanText = $('.textDig');\r\n    const text = $('.textDig').text();\r\n    \r\n    const textAnima = text; // Defina a variável textAnima com o nome desejado\r\n    let index = 0;\r\n    let blink = true;\r\n    const intervaloRef = { current: null };\r\n    const blinkIntervalRef = { current: null };\r\n\r\n    // Limpa o conteúdo existente e prepara a animação\r\n    $spanText.text(\"\");\r\n\r\n    // Função para atualizar o texto com o efeito de cursor piscando\r\n    function updateTextWithCursor() {\r\n        let displayedText = textAnima.slice(0, index);\r\n        if (blink) {\r\n            $spanText.text(displayedText + '|');\r\n        } else {\r\n            $spanText.text(displayedText + ' ');\r\n        }\r\n        blink = !blink;\r\n    }\r\n\r\n    // Inicia o intervalo para animar a inserção das letras\r\n    intervaloRef.current = setInterval(function() {\r\n        index++;\r\n        if (index > textAnima.length) {\r\n            clearInterval(intervaloRef.current);\r\n            clearInterval(blinkIntervalRef.current);\r\n            $spanText.text(textAnima); // Remove o cursor final\r\n        }\r\n    }, 180); // Ajuste o tempo para digitação\r\n\r\n    // Inicia o intervalo para o cursor piscando\r\n    blinkIntervalRef.current = setInterval(updateTextWithCursor, 150); // Ajuste o tempo para piscar\r\n  }\r\n\r\n  // Chama a função para inserir o nome com a animação\r\n  inserirNome();\r\n});\r\n\r\nconst controlRanking = (results) => {\r\n  // Obtém o email do usuário a partir do localStorage\r\n  const email = getObjectFromLocalStorage(\"user\")[\"email\"];\r\n  if (!email) {\r\n    console.error(\"Email não encontrado no localStorage.\");\r\n    return;\r\n  }\r\n\r\n  // Encontra o usuário atual nos resultados com base no email\r\n  const currentUser = results.find((it) => it.id === email);\r\n  if (!currentUser) {\r\n    console.error(\"Usuário atual não encontrado nos resultados.\");\r\n    return;\r\n  }\r\n\r\n  // Obtém a maior pontuação do usuário atual\r\n  const currentPointMax = currentUser.data.maior;\r\n\r\n  // Atualiza o texto da pontuação atual no elemento com a classe 'currentScore'\r\n  $(\".currentScore\").text(currentPointMax);\r\n\r\n  // Aplica a função ellipsis nos elementos com a classe 'nome'\r\n  $(\".nome\").ellipsis({ lines: 1 });\r\n\r\n  // Filtra os resultados para excluir os desativados e adiciona os botões de ranking\r\n  results\r\n    .filter((it) => !it.data.desativo)\r\n    .forEach((item, indice) => {\r\n      // Cria o HTML do botão de ranking\r\n      const buttonHTML = `\r\n        <button class=\"rankingScore\" data-index=\"${indice}\" data-nome=\"${item.data.nome || item.data.name}\" data-pontos=\"${item.data.maior}\" data-game1=\"${item.data.game1 || '-'}\" data-game2=\"${item.data.game2 || '-'}\" data-game3=\"${item.data.game3 || '-'}\">\r\n          <div class=\"datBase\">\r\n            <p class=\"number\">${indice + 1 < 10 ? \"0\" : \"\"}${indice + 1}</p>\r\n            <p class=\"nome\">${item.data.nome || item.data.name}</p>\r\n            <p class=\"point\">${item.data.maior} ${item.data.maior == 1 ? \"ponto\" : \"pontos\"}</p>\r\n          </div>\r\n          <div class=\"ico\"></div>\r\n        </button>`;\r\n      \r\n      // Adiciona o botão de ranking ao DOM\r\n      $(\".ranking .boxRanking\").append(buttonHTML);\r\n    });\r\n\r\n  // Adiciona um evento de clique a cada botão de ranking\r\n  $(\".rankingScore\").on(\"click\", function () {\r\n    // Obtém os dados do item clicado a partir dos atributos data do botão\r\n    const nome = $(this).data(\"nome\");\r\n    const pontos = $(this).data(\"pontos\");\r\n    const game1 = $(this).data(\"game1\");\r\n    const game2 = $(this).data(\"game2\");\r\n    const game3 = $(this).data(\"game3\");\r\n\r\n    // Exibe o modal e atualiza as informações do jogador no modal\r\n    $(\"#pop1\").css(\"display\", \"flex\");\r\n    $(\"#pop1 .nome\").text(nome);\r\n    $(\"#pop1 .game1\").text(game1);\r\n    $(\"#pop1 .game2\").text(game2);\r\n    $(\"#pop1 .game3\").text(game3);\r\n  });\r\n};\r\n"]}